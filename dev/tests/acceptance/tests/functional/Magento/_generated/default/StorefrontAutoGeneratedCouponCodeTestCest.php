<?php
namespace Magento\AcceptanceTest\_default\Backend;

use Magento\FunctionalTestingFramework\AcceptanceTester;
use \Codeception\Util\Locator;
use Yandex\Allure\Adapter\Annotation\Features;
use Yandex\Allure\Adapter\Annotation\Stories;
use Yandex\Allure\Adapter\Annotation\Title;
use Yandex\Allure\Adapter\Annotation\Description;
use Yandex\Allure\Adapter\Annotation\Parameter;
use Yandex\Allure\Adapter\Annotation\Severity;
use Yandex\Allure\Adapter\Model\SeverityLevel;
use Yandex\Allure\Adapter\Annotation\TestCaseId;

/**
 * @Title("MAGETWO-59323: [Cart Price Rule] Auto generated coupon code considers 'Uses per Coupon' and 'Uses per Customer' options")
 * @Description("[Cart Price Rule] Auto generated coupon code considers 'Uses per Coupon' and 'Uses per Customer' options<h3>Test files</h3>vendor\magento\module-sales-rule\Test\Mftf\Test\StorefrontAutoGeneratedCouponCodeTest.xml<br>")
 * @TestCaseId("MAGETWO-59323")
 * @group salesRule
 */
class StorefrontAutoGeneratedCouponCodeTestCest
{
    /**
     * @var \Magento\FunctionalTestingFramework\Helper\HelperContainer
     */
    private $helperContainer;

    /**
     * Special method which automatically creates the respective objects.
     */
    public function _inject(\Magento\FunctionalTestingFramework\Helper\HelperContainer $helperContainer)
    {
        $this->helperContainer = $helperContainer;
        $this->helperContainer->create("\Magento\Rule\Test\Mftf\Helper\RuleHelper");
    }
	/**
	  * @param AcceptanceTester $I
	  * @throws \Exception
	  */
	public function _before(AcceptanceTester $I)
	{
		$I->comment("Create customer");
		$I->createEntity("createCustomer", "hook", "Simple_US_Customer", [], []); // stepKey: createCustomer
		$I->comment("Create simple product");
		$I->createEntity("createSimpleProduct", "hook", "SimpleProduct2", [], []); // stepKey: createSimpleProduct
		$I->comment("Create a cart price rule");
		$I->createEntity("createSalesRule", "hook", "SalesRuleSpecificCoupon", [], []); // stepKey: createSalesRule
	}

	/**
	  * @param AcceptanceTester $I
	  * @throws \Exception
	  */
	public function _after(AcceptanceTester $I)
	{
		$I->comment("Delete the cart price rule we made during the test");
		$I->deleteEntity("createSalesRule", "hook"); // stepKey: deleteSalesRule
		$I->deleteEntity("createCustomer", "hook"); // stepKey: deleteCustomer
		$I->deleteEntity("createSimpleProduct", "hook"); // stepKey: deleteSimpleProduct
		$I->comment("Entering Action Group [logout] AdminLogoutActionGroup");
		$I->amOnPage((getenv("MAGENTO_BACKEND_BASE_URL") ? rtrim(getenv("MAGENTO_BACKEND_BASE_URL"), "/") : "") . "/" . getenv("MAGENTO_BACKEND_NAME") . "/admin/auth/logout/"); // stepKey: amOnLogoutPageLogout
		$I->comment("Exiting Action Group [logout] AdminLogoutActionGroup");
	}

	/**
	  * @param AcceptanceTester $I
	  * @throws \Exception
	  */
	public function _failed(AcceptanceTester $I)
	{
		$I->saveScreenshot(); // stepKey: saveScreenshot
	}

	/**
	 * @Features({"SalesRule"})
	 * @Stories({"Create cart price rule"})
	 * @Severity(level = SeverityLevel::BLOCKER)
	 * @Parameter(name = "AcceptanceTester", value="$I")
	 * @param AcceptanceTester $I
	 * @return void
	 * @throws \Exception
	 */
	public function StorefrontAutoGeneratedCouponCodeTest(AcceptanceTester $I)
	{
		$I->comment("Login as Admin");
		$I->comment("Entering Action Group [loginAsAdmin] AdminLoginActionGroup");
		$I->amOnPage((getenv("MAGENTO_BACKEND_BASE_URL") ? rtrim(getenv("MAGENTO_BACKEND_BASE_URL"), "/") : "") . "/" . getenv("MAGENTO_BACKEND_NAME") . "/admin"); // stepKey: navigateToAdminLoginAsAdmin
		$I->fillField("#username", getenv("MAGENTO_ADMIN_USERNAME")); // stepKey: fillUsernameLoginAsAdmin
		$I->fillField("#login", getenv("MAGENTO_ADMIN_PASSWORD")); // stepKey: fillPasswordLoginAsAdmin
		$I->click(".actions .action-primary"); // stepKey: clickLoginLoginAsAdmin
		$I->waitForPageLoad(30); // stepKey: clickLoginLoginAsAdminWaitForPageLoad
		$I->conditionalClick(".modal-popup .action-secondary", ".modal-popup .action-secondary", true); // stepKey: clickDontAllowButtonIfVisibleLoginAsAdmin
		$I->closeAdminNotification(); // stepKey: closeAdminNotificationLoginAsAdmin
		$I->comment("Exiting Action Group [loginAsAdmin] AdminLoginActionGroup");
		$I->comment("Search Cart Price Rule and go to edit Cart Price Rule");
		$I->amOnPage((getenv("MAGENTO_BACKEND_BASE_URL") ? rtrim(getenv("MAGENTO_BACKEND_BASE_URL"), "/") : "") . "/" . getenv("MAGENTO_BACKEND_NAME") . "/sales_rule/promo_quote/"); // stepKey: amOnCartPriceList
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad
		$I->fillField("input[name='name']", $I->retrieveEntityField('createSalesRule', 'name', 'test')); // stepKey: fillFieldFilterByName
		$I->click("#promo_quote_grid button[title='Search']"); // stepKey: clickSearchButton
		$I->waitForPageLoad(30); // stepKey: clickSearchButtonWaitForPageLoad
		$I->see($I->retrieveEntityField('createSalesRule', 'name', 'test'), "td[data-column='name']"); // stepKey: seeRuleName
		$I->click("//*[@id='promo_quote_grid_table']/tbody/tr[td//text()[contains(., '" . $I->retrieveEntityField('createSalesRule', 'name', 'test') . "')]]"); // stepKey: goToEditRule
		$I->waitForPageLoad(30); // stepKey: goToEditRuleWaitForPageLoad
		$I->comment("Step 3-4. Navigate to Manage Coupon Codes section to generate 1 coupon code");
		$I->conditionalClick("div[data-index='manage_coupon_codes']", "div[data-index='manage_coupon_codes']", true); // stepKey: clickManageCouponCodes
		$I->waitForPageLoad(30); // stepKey: clickManageCouponCodesWaitForPageLoad
		$I->fillField("#coupons_qty", "1"); // stepKey: fillFieldCouponQty
		$I->click("#coupons_generate_button"); // stepKey: clickGenerateCoupon
		$I->waitForPageLoad(30); // stepKey: clickGenerateCouponWaitForPageLoad
		$I->see("Message is added to queue, wait to get your coupons soon", "div.message.message-success.success"); // stepKey: seeSuccessMessage
		$I->comment("Start message queue for export consumer");
		$I->comment("Entering Action Group [startMessageQueue] CliConsumerStartActionGroup");
		$startMessageQueueStartMessageQueue = $I->magentoCLI("queue:consumers:start codegeneratorProcessor --max-messages=100", 60); // stepKey: startMessageQueueStartMessageQueue
		$I->comment($startMessageQueueStartMessageQueue);
		$I->comment("Exiting Action Group [startMessageQueue] CliConsumerStartActionGroup");
		$I->reloadPage(); // stepKey: refreshPage
		$I->waitForPageLoad(30); // stepKey: waitFormToReload1
		$I->conditionalClick("div[data-index='manage_coupon_codes']", "div[data-index='manage_coupon_codes']", true); // stepKey: clickManageCouponCodes2
		$I->waitForPageLoad(30); // stepKey: clickManageCouponCodes2WaitForPageLoad
		$I->comment("Grab a coupon code and hold on to it for later");
		$couponCode = $I->grabTextFrom("#couponCodesGrid_table > tbody > tr:nth-child(1) > td.col-code"); // stepKey: couponCode
		$I->comment("Step: 5. Login to storefront as previously created customer");
		$I->comment("Entering Action Group [loginAsCustomer] LoginToStorefrontActionGroup");
		$I->amOnPage("/customer/account/login/"); // stepKey: amOnSignInPageLoginAsCustomer
		$I->waitForPageLoad(30); // stepKey: waitPageFullyLoadedLoginAsCustomer
		$I->waitForElementVisible("#email", 30); // stepKey: waitFormAppearsLoginAsCustomer
		$I->fillField("#email", $I->retrieveEntityField('createCustomer', 'email', 'test')); // stepKey: fillEmailLoginAsCustomer
		$I->fillField("#pass", $I->retrieveEntityField('createCustomer', 'password', 'test')); // stepKey: fillPasswordLoginAsCustomer
		$I->click("#send2"); // stepKey: clickSignInAccountButtonLoginAsCustomer
		$I->waitForPageLoad(30); // stepKey: clickSignInAccountButtonLoginAsCustomerWaitForPageLoad
		$I->waitForPageLoad(30); // stepKey: waitForCustomerLoggedInLoginAsCustomer
		$I->comment("Exiting Action Group [loginAsCustomer] LoginToStorefrontActionGroup");
		$I->comment("Step: 6-7. Open the Product Page, add the product to Cart, go to Shopping Cart and Apply the same coupon code");
		$I->amOnPage("/" . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . ".html"); // stepKey: openProductPage
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad2
		$I->comment("Entering Action Group [applyCartPriceRule] ApplyCartRuleOnStorefrontActionGroup");
		$I->click("#product-addtocart-button"); // stepKey: addToCartApplyCartPriceRule
		$I->waitForPageLoad(60); // stepKey: addToCartApplyCartPriceRuleWaitForPageLoad
		$I->waitForPageLoad(30); // stepKey: waitForAddToCartApplyCartPriceRule
		$I->waitForElementVisible("div.message-success.success.message", 30); // stepKey: waitForSuccessMessageApplyCartPriceRule
		$I->waitForText("You added " . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . " to your shopping cart.", 30); // stepKey: waitForTextApplyCartPriceRule
		$I->amOnPage("/checkout/cart"); // stepKey: goToCheckoutPageApplyCartPriceRule
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad1ApplyCartPriceRule
		$I->click("//*[text()='Apply Discount Code']"); // stepKey: clickToDiscountTabApplyCartPriceRule
		$I->fillField("#coupon_code", $couponCode); // stepKey: fillCouponCodeApplyCartPriceRule
		$I->click("//span[text()='Apply Discount']"); // stepKey: applyCodeApplyCartPriceRule
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad2ApplyCartPriceRule
		$I->comment("Exiting Action Group [applyCartPriceRule] ApplyCartRuleOnStorefrontActionGroup");
		$I->waitForText("You used coupon code \"{$couponCode}\"", 30); // stepKey: waitForText
		$I->see("You used coupon code \"{$couponCode}\"", "div.message-success.success.message"); // stepKey: seeSuccessMessage1
		$I->waitForElementVisible("td[data-th='Discount']", 30); // stepKey: waitForElementDiscountVisible
		$I->comment("Step 8. Go to Checkout and Click Place Order button");
		$I->click("main .action.primary.checkout span"); // stepKey: clickProceedToCheckout
		$I->waitForPageLoad(30); // stepKey: clickProceedToCheckoutWaitForPageLoad
		$I->click("//div[@id='checkout-shipping-method-load']//td[contains(., 'Flat Rate')]/..//input/following-sibling::label"); // stepKey: selectFlatShippingMethod
		$I->waitForLoadingMaskToDisappear(); // stepKey: waitForLoadingMask
		$I->waitForElement("button.button.action.continue.primary", 30); // stepKey: waitForNextButton
		$I->waitForPageLoad(30); // stepKey: waitForNextButtonWaitForPageLoad
		$I->click("button.button.action.continue.primary"); // stepKey: clickNext
		$I->waitForPageLoad(30); // stepKey: clickNextWaitForPageLoad
		$I->comment("Checkout select Check/Money Order payment");
		$I->comment("Entering Action Group [selectCheckMoneyPayment] CheckoutSelectCheckMoneyOrderPaymentActionGroup");
		$I->waitForLoadingMaskToDisappear(); // stepKey: waitForLoadingMaskSelectCheckMoneyPayment
		$I->waitForPageLoad(30); // stepKey: waitForPageLoadSelectCheckMoneyPayment
		$I->conditionalClick("//div[@id='checkout-payment-method-load']//div[@class='payment-method']//label//span[contains(., 'Check / Money order')]/../..//input", "//div[@id='checkout-payment-method-load']//div[@class='payment-method']//label//span[contains(., 'Check / Money order')]/../..//input", true); // stepKey: selectCheckmoPaymentMethodSelectCheckMoneyPayment
		$I->waitForLoadingMaskToDisappear(); // stepKey: waitForLoadingMaskAfterPaymentMethodSelectionSelectCheckMoneyPayment
		$I->comment("Exiting Action Group [selectCheckMoneyPayment] CheckoutSelectCheckMoneyOrderPaymentActionGroup");
		$I->click(".payment-method._active button.action.primary.checkout"); // stepKey: clickPlaceOrder
		$I->waitForPageLoad(30); // stepKey: clickPlaceOrderWaitForPageLoad
		$I->waitForElement("div.checkout-success", 30); // stepKey: waitForLoadSuccessPage
		$I->comment("Step: 9-10. Open the Product Page, add the product to Cart, go to Shopping Cart and Apply the same coupon code");
		$I->amOnPage("/" . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . ".html"); // stepKey: openProductPage1
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad3
		$I->comment("Entering Action Group [applyCartPriceRule1] ApplyCartRuleOnStorefrontActionGroup");
		$I->click("#product-addtocart-button"); // stepKey: addToCartApplyCartPriceRule1
		$I->waitForPageLoad(60); // stepKey: addToCartApplyCartPriceRule1WaitForPageLoad
		$I->waitForPageLoad(30); // stepKey: waitForAddToCartApplyCartPriceRule1
		$I->waitForElementVisible("div.message-success.success.message", 30); // stepKey: waitForSuccessMessageApplyCartPriceRule1
		$I->waitForText("You added " . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . " to your shopping cart.", 30); // stepKey: waitForTextApplyCartPriceRule1
		$I->amOnPage("/checkout/cart"); // stepKey: goToCheckoutPageApplyCartPriceRule1
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad1ApplyCartPriceRule1
		$I->click("//*[text()='Apply Discount Code']"); // stepKey: clickToDiscountTabApplyCartPriceRule1
		$I->fillField("#coupon_code", $couponCode); // stepKey: fillCouponCodeApplyCartPriceRule1
		$I->click("//span[text()='Apply Discount']"); // stepKey: applyCodeApplyCartPriceRule1
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad2ApplyCartPriceRule1
		$I->comment("Exiting Action Group [applyCartPriceRule1] ApplyCartRuleOnStorefrontActionGroup");
		$I->waitForText("The coupon code \"{$couponCode}\" is not valid.", 30); // stepKey: waitForText1
		$I->see("The coupon code \"{$couponCode}\" is not valid.", "div.message-error.error.message"); // stepKey: seeErrorMessages
		$I->waitForElementNotVisible("td[data-th='Discount']", 30); // stepKey: waitForElementNotDiscountVisible
		$I->comment("Step 11. Log out from storefront");
		$I->comment("Entering Action Group [storefrontSignOut] StorefrontSignOutActionGroup");
		$I->click(".customer-name"); // stepKey: clickCustomerButtonStorefrontSignOut
		$I->click("div.customer-menu  li.authorization-link"); // stepKey: clickToSignOutStorefrontSignOut
		$I->waitForPageLoad(30); // stepKey: waitForPageLoadStorefrontSignOut
		$I->see("You are signed out"); // stepKey: signOutStorefrontSignOut
		$I->comment("Exiting Action Group [storefrontSignOut] StorefrontSignOutActionGroup");
		$I->comment("Step: 12-13. Open the Product Page, add the product to Cart, go to Shopping Cart and Apply the same coupon code");
		$I->amOnPage("/" . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . ".html"); // stepKey: openProductPage2
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad4
		$I->comment("Entering Action Group [applyCartPriceRule2] ApplyCartRuleOnStorefrontActionGroup");
		$I->click("#product-addtocart-button"); // stepKey: addToCartApplyCartPriceRule2
		$I->waitForPageLoad(60); // stepKey: addToCartApplyCartPriceRule2WaitForPageLoad
		$I->waitForPageLoad(30); // stepKey: waitForAddToCartApplyCartPriceRule2
		$I->waitForElementVisible("div.message-success.success.message", 30); // stepKey: waitForSuccessMessageApplyCartPriceRule2
		$I->waitForText("You added " . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . " to your shopping cart.", 30); // stepKey: waitForTextApplyCartPriceRule2
		$I->amOnPage("/checkout/cart"); // stepKey: goToCheckoutPageApplyCartPriceRule2
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad1ApplyCartPriceRule2
		$I->click("//*[text()='Apply Discount Code']"); // stepKey: clickToDiscountTabApplyCartPriceRule2
		$I->fillField("#coupon_code", $couponCode); // stepKey: fillCouponCodeApplyCartPriceRule2
		$I->click("//span[text()='Apply Discount']"); // stepKey: applyCodeApplyCartPriceRule2
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad2ApplyCartPriceRule2
		$I->comment("Exiting Action Group [applyCartPriceRule2] ApplyCartRuleOnStorefrontActionGroup");
		$I->waitForText("You used coupon code \"{$couponCode}\"", 30); // stepKey: waitForText2
		$I->see("You used coupon code \"{$couponCode}\"", "div.message-success.success.message"); // stepKey: seeSuccessMessage2
		$I->waitForElementVisible("td[data-th='Discount']", 30); // stepKey: waitForElementDiscountVisible1
		$I->comment("Step 14. Go to Checkout and Click Place Order button");
		$I->click("main .action.primary.checkout span"); // stepKey: clickProceedToCheckout1
		$I->waitForPageLoad(30); // stepKey: clickProceedToCheckout1WaitForPageLoad
		$I->comment("Entering Action Group [guestCheckoutFillingShippingSection] GuestCheckoutFillingShippingSectionActionGroup");
		$I->fillField("input[id*=customer-email]", msq("CustomerEntityOne") . "test@email.com"); // stepKey: enterEmailGuestCheckoutFillingShippingSection
		$I->fillField("input[name=firstname]", "John"); // stepKey: enterFirstNameGuestCheckoutFillingShippingSection
		$I->fillField("input[name=lastname]", "Doe"); // stepKey: enterLastNameGuestCheckoutFillingShippingSection
		$I->fillField("input[name='street[0]']", "7700 W Parmer Ln"); // stepKey: enterStreetGuestCheckoutFillingShippingSection
		$I->fillField("input[name=city]", "Austin"); // stepKey: enterCityGuestCheckoutFillingShippingSection
		$I->selectOption("select[name=region_id]", "Texas"); // stepKey: selectRegionGuestCheckoutFillingShippingSection
		$I->fillField("input[name=postcode]", "78729"); // stepKey: enterPostcodeGuestCheckoutFillingShippingSection
		$I->fillField("input[name=telephone]", "1234568910"); // stepKey: enterTelephoneGuestCheckoutFillingShippingSection
		$I->waitForLoadingMaskToDisappear(); // stepKey: waitForLoadingMaskGuestCheckoutFillingShippingSection
		$I->waitForElement("//div[@id='checkout-shipping-method-load']//td[contains(., '')]/..//input/following-sibling::label", 30); // stepKey: waitForShippingMethodGuestCheckoutFillingShippingSection
		$I->click("//div[@id='checkout-shipping-method-load']//td[contains(., '')]/..//input/following-sibling::label"); // stepKey: selectShippingMethodGuestCheckoutFillingShippingSection
		$I->waitForElement("button.button.action.continue.primary", 30); // stepKey: waitForNextButtonGuestCheckoutFillingShippingSection
		$I->waitForPageLoad(30); // stepKey: waitForNextButtonGuestCheckoutFillingShippingSectionWaitForPageLoad
		$I->click("button.button.action.continue.primary"); // stepKey: clickNextGuestCheckoutFillingShippingSection
		$I->waitForPageLoad(30); // stepKey: clickNextGuestCheckoutFillingShippingSectionWaitForPageLoad
		$I->waitForElement("//*[@id='checkout-payment-method-load']//div[@data-role='title']", 30); // stepKey: waitForPaymentSectionLoadedGuestCheckoutFillingShippingSection
		$I->seeInCurrentUrl("/checkout/#payment"); // stepKey: assertCheckoutPaymentUrlGuestCheckoutFillingShippingSection
		$I->comment("Exiting Action Group [guestCheckoutFillingShippingSection] GuestCheckoutFillingShippingSectionActionGroup");
		$I->comment("Checkout select Check/Money Order payment");
		$I->comment("Entering Action Group [selectCheckMoneyPayment2] CheckoutSelectCheckMoneyOrderPaymentActionGroup");
		$I->waitForLoadingMaskToDisappear(); // stepKey: waitForLoadingMaskSelectCheckMoneyPayment2
		$I->waitForPageLoad(30); // stepKey: waitForPageLoadSelectCheckMoneyPayment2
		$I->conditionalClick("//div[@id='checkout-payment-method-load']//div[@class='payment-method']//label//span[contains(., 'Check / Money order')]/../..//input", "//div[@id='checkout-payment-method-load']//div[@class='payment-method']//label//span[contains(., 'Check / Money order')]/../..//input", true); // stepKey: selectCheckmoPaymentMethodSelectCheckMoneyPayment2
		$I->waitForLoadingMaskToDisappear(); // stepKey: waitForLoadingMaskAfterPaymentMethodSelectionSelectCheckMoneyPayment2
		$I->comment("Exiting Action Group [selectCheckMoneyPayment2] CheckoutSelectCheckMoneyOrderPaymentActionGroup");
		$I->click(".payment-method._active button.action.primary.checkout"); // stepKey: clickPlaceOrder1
		$I->waitForPageLoad(30); // stepKey: clickPlaceOrder1WaitForPageLoad
		$I->waitForElement("div.checkout-success", 30); // stepKey: waitForLoadSuccessPage1
		$I->comment("Step; 15-16. Open the Product Page, add the product to Cart, go to Shopping Cart and Apply the same coupon code");
		$I->amOnPage("/" . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . ".html"); // stepKey: openProductPage3
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad5
		$I->comment("Entering Action Group [applyCartPriceRule3] ApplyCartRuleOnStorefrontActionGroup");
		$I->click("#product-addtocart-button"); // stepKey: addToCartApplyCartPriceRule3
		$I->waitForPageLoad(60); // stepKey: addToCartApplyCartPriceRule3WaitForPageLoad
		$I->waitForPageLoad(30); // stepKey: waitForAddToCartApplyCartPriceRule3
		$I->waitForElementVisible("div.message-success.success.message", 30); // stepKey: waitForSuccessMessageApplyCartPriceRule3
		$I->waitForText("You added " . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . " to your shopping cart.", 30); // stepKey: waitForTextApplyCartPriceRule3
		$I->amOnPage("/checkout/cart"); // stepKey: goToCheckoutPageApplyCartPriceRule3
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad1ApplyCartPriceRule3
		$I->click("//*[text()='Apply Discount Code']"); // stepKey: clickToDiscountTabApplyCartPriceRule3
		$I->fillField("#coupon_code", $couponCode); // stepKey: fillCouponCodeApplyCartPriceRule3
		$I->click("//span[text()='Apply Discount']"); // stepKey: applyCodeApplyCartPriceRule3
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad2ApplyCartPriceRule3
		$I->comment("Exiting Action Group [applyCartPriceRule3] ApplyCartRuleOnStorefrontActionGroup");
		$I->waitForText("The coupon code \"{$couponCode}\" is not valid.", 30); // stepKey: waitForText3
		$I->see("The coupon code \"{$couponCode}\" is not valid.", "div.message-error.error.message"); // stepKey: seeErrorMessages1
		$I->waitForElementNotVisible("td[data-th='Discount']", 30); // stepKey: waitForElementNotDiscountVisible1
		$I->comment("Step: 17. Reset Cookie");
		$I->resetCookie("PHPSESSID"); // stepKey: resetCookie
		$I->comment("Step: 18-19. Open the Product Page, add the product to Cart, go to Shopping Cart and Apply the same coupon code");
		$I->amOnPage("/" . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . ".html"); // stepKey: openProductPage4
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad6
		$I->comment("Entering Action Group [applyCartPriceRule4] ApplyCartRuleOnStorefrontActionGroup");
		$I->click("#product-addtocart-button"); // stepKey: addToCartApplyCartPriceRule4
		$I->waitForPageLoad(60); // stepKey: addToCartApplyCartPriceRule4WaitForPageLoad
		$I->waitForPageLoad(30); // stepKey: waitForAddToCartApplyCartPriceRule4
		$I->waitForElementVisible("div.message-success.success.message", 30); // stepKey: waitForSuccessMessageApplyCartPriceRule4
		$I->waitForText("You added " . $I->retrieveEntityField('createSimpleProduct', 'name', 'test') . " to your shopping cart.", 30); // stepKey: waitForTextApplyCartPriceRule4
		$I->amOnPage("/checkout/cart"); // stepKey: goToCheckoutPageApplyCartPriceRule4
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad1ApplyCartPriceRule4
		$I->click("//*[text()='Apply Discount Code']"); // stepKey: clickToDiscountTabApplyCartPriceRule4
		$I->fillField("#coupon_code", $couponCode); // stepKey: fillCouponCodeApplyCartPriceRule4
		$I->click("//span[text()='Apply Discount']"); // stepKey: applyCodeApplyCartPriceRule4
		$I->waitForPageLoad(30); // stepKey: waitForPageLoad2ApplyCartPriceRule4
		$I->comment("Exiting Action Group [applyCartPriceRule4] ApplyCartRuleOnStorefrontActionGroup");
		$I->waitForText("The coupon code \"{$couponCode}\" is not valid.", 30); // stepKey: waitForText4
		$I->see("The coupon code \"{$couponCode}\" is not valid.", "div.message-error.error.message"); // stepKey: seeErrorMessages2
		$I->waitForElementNotVisible("td[data-th='Discount']", 30); // stepKey: waitForElementNotDiscountVisible2
	}
}
